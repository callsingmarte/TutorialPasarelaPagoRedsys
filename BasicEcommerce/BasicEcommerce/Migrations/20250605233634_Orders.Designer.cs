// <auto-generated />
using System;
using BasicEcommerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasicEcommerce.Migrations
{
    [DbContext(typeof(EcommerceContext))]
    [Migration("20250605233634_Orders")]
    partial class Orders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BasicEcommerce.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BasicEcommerce.Models.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("BasicEcommerce.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("0f05c49c-4bf6-4623-b3f7-7c1bd0394fd0"),
                            Description = "Sonido de alta fidelidad con cancelación de ruido activa y 24 horas de batería.",
                            MainImageUrl = "https://images.unsplash.com/photo-1505740420928-5e560c06d30e?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Auriculares Inalámbricos Pro",
                            Price = 129.99m,
                            Stock = 75
                        },
                        new
                        {
                            ProductId = new Guid("928f4f5b-72cd-4782-9a23-1fb243e0a67b"),
                            Description = "Diseño compacto con switches Cherry MX Red y retroiluminación RGB personalizable.",
                            MainImageUrl = "https://images.unsplash.com/photo-1633315754878-b5a3b0ce64f7?q=80&w=2076&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Teclado Mecánico RGB",
                            Price = 89.50m,
                            Stock = 120
                        },
                        new
                        {
                            ProductId = new Guid("51adcc72-d012-4f15-889b-d5b5cf3328ed"),
                            Description = "Diseño ergonómico, sensor de 16000 DPI y 6 botones programables. Solo 60g.",
                            MainImageUrl = "https://images.unsplash.com/photo-1605773527852-c546a8584ea3?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Ratón Gaming Ultraligero",
                            Price = 49.99m,
                            Stock = 90
                        },
                        new
                        {
                            ProductId = new Guid("33728ad3-f11d-4afd-ba7d-38d2f0516e2a"),
                            Description = "Panel VA con resolución QHD (2560x1440), 144Hz de refresco y 1ms de respuesta.",
                            MainImageUrl = "https://images.unsplash.com/photo-1666771410003-8437c4781d49?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Monitor Curvo 27'' QHD",
                            Price = 299.00m,
                            Stock = 40
                        },
                        new
                        {
                            ProductId = new Guid("41dd73d7-6eaa-4438-bcdc-277583e64ab9"),
                            Description = "Ideal para videollamadas y streaming, con enfoque automático y micrófono integrado.",
                            MainImageUrl = "https://images.unsplash.com/photo-1636569826709-8e07f6104992?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Webcam Full HD 1080p",
                            Price = 35.75m,
                            Stock = 200
                        },
                        new
                        {
                            ProductId = new Guid("cfc43279-f2ea-4c07-a174-ee8312e8f26f"),
                            Description = "Almacenamiento portátil de alta velocidad con conexión USB 3.0. Delgado y resistente.",
                            MainImageUrl = "https://images.unsplash.com/photo-1613070541337-b40942ee6527?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Disco Duro Externo 2TB",
                            Price = 75.25m,
                            Stock = 60
                        },
                        new
                        {
                            ProductId = new Guid("c76a62cf-e195-46a8-a0b9-44712d4a77bb"),
                            Description = "Monitor de ritmo cardíaco, GPS integrado y resistencia al agua. Compatible con iOS/Android.",
                            MainImageUrl = "https://images.unsplash.com/photo-1733570890170-49be2550189b?q=80&w=2071&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Smartwatch Deportivo X1",
                            Price = 99.00m,
                            Stock = 85
                        },
                        new
                        {
                            ProductId = new Guid("e2c2aae8-ad76-4c04-98a3-54dedae2d5cc"),
                            Description = "Sonido potente en 360º, 12 horas de batería y resistencia IPX7 al agua.",
                            MainImageUrl = "https://images.unsplash.com/photo-1589256469067-ea99122bbdc4?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Altavoz Bluetooth Portátil",
                            Price = 59.99m,
                            Stock = 150
                        },
                        new
                        {
                            ProductId = new Guid("7e9b81b5-3f28-4009-bbfc-517c7149ae4d"),
                            Description = "Carga tu portátil, tablet y smartphone a máxima velocidad. Diseño compacto.",
                            MainImageUrl = "https://images.unsplash.com/photo-1731616103600-3fe7ccdc5a59?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Cargador Rápido USB-C 65W",
                            Price = 25.00m,
                            Stock = 300
                        },
                        new
                        {
                            ProductId = new Guid("ccdda0b5-c978-4ed8-90b0-d4be59a48807"),
                            Description = "Diseño ergonómico, compartimentos ocultos y puerto de carga USB integrado.",
                            MainImageUrl = "https://images.unsplash.com/photo-1668114844900-537ab91478b9?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Mochila Antirrobo para Portátil",
                            Price = 45.80m,
                            Stock = 110
                        });
                });

            modelBuilder.Entity("BasicEcommerce.Models.OrderItem", b =>
                {
                    b.HasOne("BasicEcommerce.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BasicEcommerce.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BasicEcommerce.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
